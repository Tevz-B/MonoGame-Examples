namespace Default.Namespace
{

    @implementation TextureSorting void initialize()
    {
        sortMode = SpriteSortModeDeffered;
        maxItems = 2000;
        base.initialize();
    }

    void UpdateWithGameTime(GameTime gameTime)
    {
        TouchCollection touches = TouchPanel.GetInstance().GetState();
        foreach (TouchLocation touch in touches)
        {
            if (touch.State == TouchLocationStatePressed)
            {
                if (sortMode == SpriteSortModeTexture)
                {
                    sortMode = SpriteSortModeDeffered;
                    Console.WriteLine("Switching to deffered mode.");
                }
                else if (sortMode == SpriteSortModeDeffered)
                {
                    sortMode = SpriteSortModeTexture;
                    Console.WriteLine("Switching to texture mode.");
                }

            }

        }
        base.UpdateWithGameTime(gameTime);
    }

    void DrawWithGameTime(GameTime gameTime)
    {
        base.DrawWithGameTime(gameTime);
        spriteBatch.BeginWithSortModeBlendState(sortMode, null);
        foreach (Item item in scene)
        {
            spriteBatch.DrawToFromRectangleTintWithColorRotationOriginScaleUniformEffectsLayerDepth(sprites256[item.RectangleIndex % 16], item.Position, null, item.Color, 0, Vector2.Zero(), 0.1f, SpriteEffectsNone, 0);
        }
        spriteBatch.End();
    }

    @end
}